{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","padding","src","width","height","alt","title","type","id","class","onClick","toggleMode","htmlfor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toggleAlert","toLowerCase","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","msg","App","setMode","setAlert","message","setTimeout","body","bottom","position","overflow","left","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e8f5f5bb.chunk.js","sourcesContent":["import React from 'react'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\" padding=\"2px\">\r\n            <img src=\"https://www.kindpng.com/picc/m/247-2470636_letter-t-logo-png-transparent-png.png\" width=\"25\"  height=\"20\" alt=\"/\" />\r\n            {props.title}\r\n          </a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"\r\n    >Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" to=\"/about\"\r\n    >About</a>\r\n              </li> */}\r\n      \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          <div class=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlfor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React,{useState} from 'react' \r\n\r\n\r\nexport default function TextForm(props) {\r\n    \r\nconst [text, setText] = useState('Enter Text!');\r\n\r\n    const upClick = ()=>{\r\n        // console.log('click');\r\n        let newText = text.toUpperCase();\r\n        \r\n        setText(newText);\r\n\r\n        props.toggleAlert(\"Converted to UPPERCASE\", \"success\");\r\n    }\r\n\r\n    const loClick = ()=>{\r\n        // console.log('click');\r\n        let newText = text.toLowerCase();\r\n        \r\n        setText(newText);\r\n        props.toggleAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n\r\n    const clearClick = ()=>{\r\n        // console.log('click');\r\n        let newText = '';\r\n        \r\n        setText(newText);\r\n        props.toggleAlert(\"Text cleared\", \"success\");\r\n    }\r\n\r\n    const sentenceCaseClick = ()=>{\r\n        let newText = text.charAt(0).toUpperCase() + text.slice(1);  \r\n        setText(newText);\r\n\r\n        props.toggleAlert(\"Converted to Sentence case\", \"success\");\r\n    }   \r\n    const copyClick = ()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n\r\n        props.toggleAlert(\"Text copied to clipboard\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{ \r\n        setText(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div class = \"container\" style = {{color : props.mode==='dark'?'red ':'red'}}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value = {text} onChange = {handleOnChange} style = {{backgroundColor : props.mode==='dark'?'#042743':'white' , color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {upClick}>\r\n                Convert to UPPERCASE\r\n            </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {loClick}>        \r\n                Convert to lowercase\r\n            </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {clearClick}>\r\n                Clear Text\r\n            </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {sentenceCaseClick}>\r\n                Sentence Case\r\n            </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {copyClick}>\r\n                Copy Text\r\n            </button>\r\n        </div>\r\n\r\n{/* text summary  */}\r\n\r\n        <div className=\"container my-5 \" style = {{color : props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your Text Summary :</h2>\r\n            <p><strong> {text.split(\" \").length } words and {text.length} characters. </strong></p>\r\n        <h3 style = {{color : props.mode==='dark'?'red':'red'}}>Preview</h3>\r\n        {text}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null);\n\n  const toggleAlert = (message, type)=>{\n      setAlert({\n        msg : message,\n        type : type\n      })\n\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743'\n      toggleAlert(\"Dark mode enabled\", \"success\");\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      toggleAlert(\"Light mode enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title = \"  TextUtils\"  mode = {mode} toggleMode = {toggleMode}/>\n    <Alert alert = {alert}/>\n\n    \n    <div className=\"container my-5\">\n\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route> */}\n        \n          {/* <Route exact path=\"/\"> */}\n          <TextForm toggleAlert = {toggleAlert} heading = \"Enter Your Text Here : \" mode = {mode}/>\n          {/* </Route> */}\n    \n    {/* </Switch> */}\n    </div>\n\n    <footer className=\"page-footer font-small blue\" style = {{backgroundColor : 'black', color : 'white', bottom : 0, position : 'absolute', overflow : 'hidden', left : 0, width : '100%'}}>\n      <div className=\"footer-copyright text-center py-3\"> <strong> © 2021 Copyright:</strong>\n  \n      <a href=\"#\"> <strong> TextUtils</strong></a>\n\n      </div>\n    </footer>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring perhtmlFormance in your app, pass a function\n// to log results (htmlFor example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}